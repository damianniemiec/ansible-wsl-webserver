- set_fact:
    wordpress_path: '{{ domain_path.user_input if domain_path.user_input else "/var/www/html/" ~ domain ~ "/public_html" }}'
- name: check paths
  stat: path={{ wordpress_path }}
  register: wordpress_files
- name: Check for existing installations
  fail: msg="This host has already had this playbook run against it"
  when: wordpress_files.stat.exists
- name: Create document root
  file:
    path: "{{ wordpress_path }}"
    state: directory
    mode: '0755'
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    recurse: yes
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  tags: [ apache ]
- name: Download and unpack latest WordPress
  unarchive:
    src: 'https://wordpress.org/latest.tar.gz'
    dest: '{{ wordpress_path }}'
    remote_src: yes
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: '0755'
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  tags: [ wordpress ]
- shell: mv {{ wordpress_path }}/wordpress/* {{ wordpress_path }}
  tags: [ wordpress ]
- name: Remove empty wordpress directory
  file:
    path: "{{ wordpress_path }}/wordpress"
    state: absent
  tags: [ wordpress ]
- block:
  - set_fact:
      mysql_db: 'wp_{{ 10000 | random }}'
  - set_fact:
      created_databases:
      - { name: '{{ mysql_db }}' }
  - include_role:
      name: mysql
      tasks_from: create-databases
  rescue:
  - set_fact:
      mysql_db: 'wp_{{ 10000 | random }}'
  - set_fact:
      created_databases:
      - { name: '{{ mysql_db }}' }
  - include_role:
      name: mysql
      tasks_from: create-databases
- name: Copy wp-config
  template:
    src: "files/wp-config.php.j2"
    dest: "{{ wordpress_path }}/wp-config.php"
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: '0755'
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  tags: [ wordpress ]
- name: Setup domain
  set_fact:
    created_domains:
    - { name: '{{ domain }}', domain: '{{ domain }}', path: '{{ wordpress_path }}' }
    enabled_sites:
    - { name: '{{ domain }}' }
  tags: [ wordpress ]
- include_role:
    name: "apache2"
    tasks_from: setup-hosts
- debug:
    msg: 'If run in WSL add `127.0.0.1 {{ domain }}` to `C:\Windows\System32\drivers\etc\hosts`'