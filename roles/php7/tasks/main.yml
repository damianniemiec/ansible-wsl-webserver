- name: Ensure dirmngr is installed (gnupg dependency).
  apt:
    name: dirmngr
    state: present
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Add ppa:ondrej/php repository
  apt_repository:
    repo: ppa:ondrej/php
    state: present
  when: ansible_distribution == "Ubuntu"
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Add dependencies for PHP versions (Debian).
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
  when: ansible_distribution == "Debian"
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Add Ondrej Sury's apt key (Debian).
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
    state: present
  when: ansible_distribution == "Debian"
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Add Ondrej Sury's repo (Debian).
  apt_repository:
    repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
    state: present
  register: php_ondrej_debian_repo
  when: ansible_distribution == "Debian"
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Install PHP7
  apt:
    name:
    - php7.4-fpm
    - php7.4-bcmath
    - php7.4-curl
    - php7.4-gd
    - php7.4-intl
    - php7.4-mysql
    - php7.4-sqlite3
    - php7.4-xml
    - php7.4-zip
    update_cache: yes
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
- name: Enable Apache2 module
  apache2_module:
    state: present
    name: proxy_fcgi
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  notify:
  - restart apache2
- name: Ensure php proxy is present in apache default config
  blockinfile:
    path: /etc/apache2/sites-available/000-default.conf
    block: |8
              <FilesMatch \.php$>
                  SetHandler "proxy:unix:/var/run/php/php7.4-fpm.sock|fcgi://localhost"
              </FilesMatch>
    insertbefore: "</VirtualHost>"
    state: present
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  notify:
  - restart apache2
- name: Correct user for php-fpm
  lineinfile:
    path: /etc/php/7.4/fpm/pool.d/www.conf
    regexp: '^user ='
    line: "user = {{ ansible_env.USER }}"
    state: present
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  notify:
  - restart php7
- name: Correct group for php-fpm
  lineinfile:
    path: /etc/php/7.4/fpm/pool.d/www.conf
    regexp: '^group ='
    line: "group = {{ ansible_env.USER }}"
    state: present
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"
  notify:
  - restart php7
- name: Start service php7.4-fpm, if not started
  service:
    name: php7.4-fpm
    state: started
  become: yes
  become_method: sudo
  vars:
    ansible_become_password: "{{ sudo_password }}"